{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tamashollos/Git/living-togeter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/tamashollos/Git/living-togeter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/tamashollos/Git/living-togeter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nexport default {\n  registerBuilding: function registerBuilding(context, data) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var response, responseData;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://living-together-90530-default-rtdb.europe-west1.firebasedatabase.app/buildings.json\", {\n                method: 'POST',\n                body: JSON.stringify(data)\n              });\n            case 2:\n              response = _context.sent;\n              if (!response.ok) {\n                ///\n              }\n              _context.next = 6;\n              return response.json();\n            case 6:\n              responseData = _context.sent;\n              context.commit('registerBuilding', _objectSpread({}, responseData));\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  loadBuildings: function loadBuildings(context) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var response, error, responseData;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"https://living-together-90530-default-rtdb.europe-west1.firebasedatabase.app/buildings.json\", {\n                method: 'POST',\n                body: JSON.stringify(data)\n              });\n            case 2:\n              response = _context2.sent;\n              if (response.ok) {\n                _context2.next = 6;\n                break;\n              }\n              error = new Error(responseData.message || 'Failed to fetch!');\n              throw error;\n            case 6:\n              _context2.next = 8;\n              return response.json();\n            case 8:\n              responseData = _context2.sent;\n              context.commit('registerBuilding', _objectSpread({}, responseData));\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"names":["registerBuilding","context","data","fetch","method","body","JSON","stringify","response","ok","json","responseData","commit","loadBuildings","error","Error","message"],"sources":["/Users/tamashollos/Git/living-togeter/src/store/modules/buildings/actions.js"],"sourcesContent":["export default {\n\n    async registerBuilding(context, data) {\n        const response = await fetch(`https://living-together-90530-default-rtdb.europe-west1.firebasedatabase.app/buildings.json`, {\n            method: 'POST',\n            body: JSON.stringify(data)\n        })\n\n        if(!response.ok) {\n            ///\n        }\n\n        const responseData = await response.json()\n\n        context.commit('registerBuilding', {\n            ...responseData\n\n        })\n    },\n\n\n    async loadBuildings(context) {\n        const response = await fetch(`https://living-together-90530-default-rtdb.europe-west1.firebasedatabase.app/buildings.json`, {\n            method: 'POST',\n            body: JSON.stringify(data)\n        })\n\n        if(!response.ok) {\n            const error = new Error(responseData.message || 'Failed to fetch!')\n            throw error\n        }\n\n        const responseData = await response.json()\n\n        context.commit('registerBuilding', {\n            ...responseData\n\n        })\n    }\n\n    \n    \n}"],"mappings":";;;;;;;AAAA,eAAe;EAELA,gBAAgB,4BAACC,OAAO,EAAEC,IAAI,EAAE;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACXC,KAAK,gGAAgG;gBACxHC,MAAM,EAAE,MAAM;gBACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;cAC7B,CAAC,CAAC;YAAA;cAHIM,QAAQ;cAKd,IAAG,CAACA,QAAQ,CAACC,EAAE,EAAE;gBACb;cACJ;cAAC;cAAA,OAE0BD,QAAQ,CAACE,IAAI,EAAE;YAAA;cAApCC,YAAY;cAElBV,OAAO,CAACW,MAAM,CAAC,kBAAkB,oBAC1BD,YAAY,EAEjB;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EACN,CAAC;EAGKE,aAAa,yBAACZ,OAAO,EAAE;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACFE,KAAK,gGAAgG;gBACxHC,MAAM,EAAE,MAAM;gBACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;cAC7B,CAAC,CAAC;YAAA;cAHIM,QAAQ;cAAA,IAKVA,QAAQ,CAACC,EAAE;gBAAA;gBAAA;cAAA;cACLK,KAAK,GAAG,IAAIC,KAAK,CAACJ,YAAY,CAACK,OAAO,IAAI,kBAAkB,CAAC;cAAA,MAC7DF,KAAK;YAAA;cAAA;cAAA,OAGYN,QAAQ,CAACE,IAAI,EAAE;YAAA;cAApCC,YAAY;cAElBV,OAAO,CAACW,MAAM,CAAC,kBAAkB,oBAC1BD,YAAY,EAEjB;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EACN;AAIJ,CAAC"},"metadata":{},"sourceType":"module"}