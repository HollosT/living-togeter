{"ast":null,"code":"import { isRef, ref } from '@vue/reactivity';\nimport { useStore } from 'vuex';\nexport default {\n  setup: function setup() {\n    var store = useStore();\n    var buildings = store.getters[\"buildings/buildings\"];\n    var name = ref({\n      val: '',\n      isValid: true\n    });\n    var formIsValid = ref(true);\n    var address = ref({\n      country: {\n        val: '',\n        isUnique: true,\n        isValid: true\n      },\n      city: {\n        val: '',\n        isUnique: true,\n        isValid: true\n      },\n      postalCode: {\n        val: '',\n        isUnique: true,\n        isValid: true\n      },\n      street: {\n        val: '',\n        isUnique: true,\n        isValid: true\n      },\n      buildingNumber: {\n        val: '',\n        isUnique: true,\n        isValid: true\n      }\n    });\n    var flats = ref({\n      val: '',\n      isValid: true\n    });\n    var description = ref({\n      val: '',\n      isValid: true\n    });\n\n    // function addressValidation(input) {\n    //     buildings.forEach(bld => {\n    //     const existingAddress = bld.address\n\n    //     if(existingAddress[input] === address.value[input].val) {\n    //       address.value[input].isUnique = false\n    //     }\n\n    //   })\n\n    // }\n\n    function validation() {}\n\n    // Checking the address\n    // function checkValidation() {\n    //     let falseArr = []\n    //     for(const key in address.value) {\n    //       if(address.value[key].isUnique === false) {\n    //         falseArr.push(key)\n\n    //       }\n\n    //     }\n    //     if(falseArr.length === 5) {\n    //       formIsValid.value = false;\n    //       for(const key in address.value) {\n    //         // if(address.value[key].isUnique === false) {\n    //         //   address.value[key].val = ''\n    //         //   // address.value[key].isUnique = \n\n    //         // }\n\n    //     }\n    //     }\n    // }\n\n    function submitForm() {\n      checkValidation();\n      console.log(address.value);\n    }\n    return {\n      name: name,\n      address: address,\n      submitForm: submitForm,\n      formIsValid: formIsValid\n    };\n  }\n};","map":{"version":3,"mappings":"AAkDA,SAASA,KAAK,EAAEC,GAAE,QAAS,iBAAgB;AAC3C,SAASC,QAAO,QAAS,MAAK;AAI9B,eAAe;EAGXC,KAAK,mBAAG;IACJ,IAAMC,KAAI,GAAIF,QAAQ,EAAC;IACvB,IAAMG,SAAQ,GAAKD,KAAK,CAACE,OAAO,CAAC,qBAAqB;IACtD,IAAMC,IAAG,GAAIN,GAAG,CAAC;MACTO,GAAG,EAAE,EAAE;MACPC,OAAO,EAAE;IACjB,CAAC;IAED,IAAMC,WAAU,GAAIT,GAAG,CAAC,IAAI;IAC5B,IAAMU,OAAM,GAAIV,GAAG,CAAC;MAChBW,OAAO,EAAE;QACLJ,GAAG,EAAE,EAAE;QACPK,QAAQ,EAAE,IAAI;QACdJ,OAAO,EAAE;MACb,CAAC;MACDK,IAAI,EAAE;QACFN,GAAG,EAAE,EAAE;QACPK,QAAQ,EAAE,IAAI;QACdJ,OAAO,EAAE;MACb,CAAC;MACDM,UAAU,EAAE;QACRP,GAAG,EAAE,EAAE;QACPK,QAAQ,EAAE,IAAI;QACdJ,OAAO,EAAE;MACb,CAAC;MACDO,MAAM,EAAE;QACJR,GAAG,EAAE,EAAE;QACPK,QAAQ,EAAE,IAAI;QACdJ,OAAO,EAAE;MACb,CAAC;MACDQ,cAAc,EAAE;QACZT,GAAG,EAAE,EAAE;QACPK,QAAQ,EAAE,IAAI;QACdJ,OAAO,EAAE;MACb;IACJ,CAAC;IACD,IAAMS,KAAI,GAAIjB,GAAG,CAAC;MACVO,GAAG,EAAE,EAAE;MACPC,OAAO,EAAE;IACjB,CAAC;IACD,IAAMU,WAAU,GAAIlB,GAAG,CAAC;MAChBO,GAAG,EAAE,EAAE;MACPC,OAAO,EAAE;IACjB,CAAC;;IAGL;IACA;IACA;;IAEA;IACA;IACA;;IAGA;;IAEA;;IAEA,SAASW,UAAU,GAAG,CAEtB;;IAGA;IACA;IACA;IACA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;;IAMA,SAASC,UAAU,GAAG;MACpBC,eAAe,EAAC;MAChBC,OAAO,CAACC,GAAG,CAACb,OAAO,CAACc,KAAK,CAAC;IAE5B;IAIA,OAAO;MAAClB,IAAI,EAAJA,IAAI;MAAEI,OAAO,EAAPA,OAAO;MAAEU,UAAU,EAAVA,UAAU;MAAEX,WAAW,EAAXA;IAAW;EAClD;AACA","names":["isRef","ref","useStore","setup","store","buildings","getters","name","val","isValid","formIsValid","address","country","isUnique","city","postalCode","street","buildingNumber","flats","description","validation","submitForm","checkValidation","console","log","value"],"sourceRoot":"","sources":["/Users/tamashollos/Git/living-togeter/src/components/buildings/BuildingForm.vue"],"sourcesContent":["<template>\n      <base-form @submit.prevent=\"submitForm\">\n\n        <div class=\"input-container\">\n          <label for=\"name\">Add a name for your community:</label>\n          <input type=\"text\" id=\"name\" v-model.trim=\"name.val\" requeired autofocus >\n        </div>\n\n       <div class=\"input-container\">\n          <label for=\"country\">Country:</label>\n          <input type=\"text\" id=\"country\" v-model.trim=\"address.country.val\" requeired @blur=\"addressValidation('country')\">\n        </div> \n\n        <div class=\"input-container\">\n          <label for=\"city\">City:</label>\n          <input type=\"text\" id=\"city\" v-model.trim=\"address.city.val\" requeired @blur=\"addressValidation('city')\">\n        </div>\n\n        <div class=\"input-container\">\n          <label for=\"postalCode\">Postal code:</label>\n          <input type=\"number\" id=\"postalCode\" v-model.trim=\"address.postalCode.val\" requeired @blur=\"addressValidation('postalCode')\">\n        </div>\n\n        <div class=\"input-container\">\n          <label for=\"street\">Street:</label>\n          <input type=\"text\" id=\"street\" v-model.trim=\"address.street.val\" requeired @blur=\"addressValidation('street')\">\n        </div>\n\n        <div class=\"input-container\">\n          <label for=\"buildingNumber\">Building number:</label>\n          <input type=\"number\" id=\"buildingNumber\" v-model.trim=\"address.buildingNumber.val\" requeired @blur=\"addressValidation('buildingNumber')\">\n        </div>\n\n        <p v-if=\"!formIsValid\">Sorry, but there is alr</p>\n        <!-- \n    \n        <div class=\"input-container\">\n          <label for=\"flats\">Number of flats:</label>\n          <input type=\"number\" id=\"flats\" v-model.trim=\"flats.val\" requeired >\n        </div>\n        <div class=\"input-container\">\n          <label for=\"description\">Description:</label>\n          <textarea  id=\"description\"  rows=\"3\" v-model.trim=\"description.val\" requeired ></textarea>\n        </div> -->\n\n        <base-button type=\"filled\">Send</base-button>\n      </base-form>\n</template>\n\n<script>\nimport { isRef, ref } from '@vue/reactivity'\nimport { useStore } from 'vuex'\n\n\n\nexport default {\n\n\n    setup() {\n        const store = useStore()\n        const buildings =  store.getters[\"buildings/buildings\"]\n        const name = ref({\n                val: '',\n                isValid: true\n        })\n\n        const formIsValid = ref(true)\n        const address = ref({\n            country: {\n                val: '',\n                isUnique: true,\n                isValid: true\n            },\n            city: {\n                val: '',\n                isUnique: true,\n                isValid: true\n            },\n            postalCode: {\n                val: '',\n                isUnique: true,\n                isValid: true\n            },\n            street: {\n                val: '',\n                isUnique: true,\n                isValid: true\n            },\n            buildingNumber: {\n                val: '',\n                isUnique: true,\n                isValid: true\n            }\n        })\n        const flats = ref({\n                val: '',\n                isValid: true\n        })\n        const description = ref({\n                val: '',\n                isValid: true\n        })\n \n        \n    // function addressValidation(input) {\n    //     buildings.forEach(bld => {\n    //     const existingAddress = bld.address\n\n    //     if(existingAddress[input] === address.value[input].val) {\n    //       address.value[input].isUnique = false\n    //     }\n\n            \n    //   })\n                  \n    // }\n\n    function validation() {\n\n    }\n\n\n    // Checking the address\n    // function checkValidation() {\n    //     let falseArr = []\n    //     for(const key in address.value) {\n    //       if(address.value[key].isUnique === false) {\n    //         falseArr.push(key)\n\n    //       }\n          \n    //     }\n    //     if(falseArr.length === 5) {\n    //       formIsValid.value = false;\n    //       for(const key in address.value) {\n    //         // if(address.value[key].isUnique === false) {\n    //         //   address.value[key].val = ''\n    //         //   // address.value[key].isUnique = \n\n    //         // }\n          \n    //     }\n    //     }\n    // }\n\n\n\n\n\n    function submitForm() {\n      checkValidation()\n      console.log(address.value);\n        \n    }\n\n\n\n    return {name, address, submitForm, formIsValid}\n}\n}\n</script>\n\n<style scoped> \n    .input-container {\n        width: 80%;\n        margin: auto;\n        display: flex;\n        gap: 2vw;\n        margin-bottom: 3vw;\n    }\n\n    input,\n    textarea {\n        width: 25vw;\n        border-radius: .5vw;\n\n    }\n\n\n</style>"]},"metadata":{},"sourceType":"module"}