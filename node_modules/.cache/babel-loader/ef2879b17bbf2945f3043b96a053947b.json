{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_base_card = _resolveComponent(\"base-card\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_base_card), _createTextVNode(\" \" + _toDisplayString($setup.building.name), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;6DACIA,aACQC,2CACV,oBAAEC,eAAQ,CAACC,IAAI","names":["_createVNode","_component_base_card","$setup","name"],"sourceRoot":"","sources":["/Users/tamashollos/Vue/living-together/src/pages/buildings/BuildingDetail.vue"],"sourcesContent":["<template>\n    <base-card>\n</base-card>\n  {{building.name}}\n</template>\n\n<script>\nimport { ref } from '@vue/reactivity'\nimport { useRoute } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { computed } from '@vue/runtime-core'\nexport default {\n\n    setup() {\n       const route = useRoute()\n       const store = useStore()\n       \n       const building = computed(() => {\n          return store.getters['buildings/buildings'].find(bld => bld.id === route.params.bid)\n            \n       })\n\n        return{building}\n       \n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}