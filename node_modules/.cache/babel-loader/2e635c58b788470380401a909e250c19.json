{"ast":null,"code":"import { renderSlot as _renderSlot, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"to\"];\nexport function render(_ctx, _cache) {\n  return !_ctx.link ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: _normalizeClass(_ctx.type)\n  }, [_renderSlot(_ctx.$slots, \"default\")], 2 /* CLASS */)) : (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    to: _ctx.to,\n    class: _normalizeClass(_ctx.type)\n  }, [_renderSlot(_ctx.$slots, \"default\")], 10 /* CLASS, PROPS */, _hoisted_1));\n}","map":{"version":3,"mappings":";;;UACiBA,SAAI,kBAAnBC,oBAES;;IAFaC,KAAK,kBAAEF,SAAI;MAC/BG,YAAaH,2DAGfC,oBAES;;IAFOG,EAAE,EAAEJ,OAAE;IAAGE,KAAK,kBAAEF,SAAI;MAClCG,YAAaH","names":["_ctx","_createElementBlock","class","_renderSlot","to"],"sourceRoot":"","sources":["/Users/tamashollos/Vue/living-together/src/components/UI/BaseButton.vue"],"sourcesContent":["<template>\n  <button v-if=\"!link\" :class=\"type\">\n    <slot></slot>\n  </button>\n\n  <button v-else :to=\"to\" :class=\"type\">\n    <slot></slot>\n  </button>\n</template>\n\n<script>\nexport default {\n    props: {\n       type: {\n            type: String,\n            required: false,\n            default:\n       }\n    }\n\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}