{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"input-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"Add a name for your neighborhood\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_base_button = _resolveComponent(\"base-button\");\n  return _openBlock(), _createElementBlock(\"form\", null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.name.val = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.name.val, void 0, {\n    trim: true\n  }]])]), _createVNode(_component_base_button, {\n    type: \"filled\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Submit\")]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":";;EAEaA,KAAK,EAAC;AAAiB;gCAC1BC,oBAAsD;EAA/CC,GAAG,EAAC;AAAkC;;;;uBAFjDC,oBAMO,eALLF,oBAGM,OAHNG,UAGM,GAFJC,UAAsD,kBACtDJ,oBAAqD;IAA9CK,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,MAAM;+DAAeC,SAAI,CAACC,GAAG;iDAARD,SAAI,CAACC,GAAG;UAAtB;EAAuB,QAEtDC,aAA+CC;IAAlCL,IAAI,EAAC;EAAQ;sBAAC,MAAM,kBAAN,QAAM","names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","type","id","_ctx","val","_createVNode","_component_base_button"],"sourceRoot":"","sources":["/Users/tamashollos/Vue/living-together/src/components/buildings/BuildingForm.vue"],"sourcesContent":["<template>\n      <form>\n        <div class=\"input-container\">\n          <label for=\"Add a name for your neighborhood\"></label>\n          <input type=\"text\" id=\"name\" v-model.trim=\"name.val\">\n        </div>\n        <base-button type=\"filled\">Submit</base-button>\n      </form>\n</template>\n\n<script>\nimport { ref } from '@vue/reactivity'\n\nexport default {\n\n    setup() {\n        const name = ref({\n            val: '',\n            isValid: true\n        })\n    }\n\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}