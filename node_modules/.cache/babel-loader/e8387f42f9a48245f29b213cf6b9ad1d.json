{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { computed } from '@vue/runtime-core';\nimport BaseButton from '@/components/UI/BaseButton.vue';\nexport default {\n  components: {\n    BaseButton: BaseButton\n  },\n  setup: function setup() {\n    var route = useRoute();\n    var store = useStore();\n    var isLoggedIn = computed(function () {\n      return store.getters.isAuthenticated;\n    });\n    var building = computed(function () {\n      return store.getters['buildings/buildings'].find(function (bld) {\n        return bld.id === route.params.bid;\n      });\n    });\n    console.log(ha);\n    var hasApplication = computed(function () {\n      return store.getters['residents/hasApplication'];\n    });\n    var apply = function apply() {\n\n      // const request = {\n      //     email: localStorage.getItem('email'),\n      //     userId: localStorage.getItem('userId'),\n      //     buildingId: route.params.bid\n      // }\n\n      // store.dispatch('residents/apply', request)\n    };\n    return {\n      building: building,\n      isLoggedIn: isLoggedIn,\n      apply: apply,\n      hasApplication: hasApplication\n    };\n  }\n};","map":{"version":3,"mappings":";;AAgBA,SAASA,QAAO,QAAS,YAAW;AACpC,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,QAAO,QAAS,mBAAkB;AAC3C,OAAOC,UAAS,MAAO,gCAA+B;AACtD,eAAe;EACbC,UAAU,EAAE;IAAED,UAAS,EAATA;EAAW,CAAC;EAExBE,KAAK,mBAAG;IACL,IAAMC,KAAI,GAAIN,QAAQ,EAAC;IACvB,IAAMO,KAAI,GAAIN,QAAQ,EAAC;IAEvB,IAAMO,UAAS,GAAIN,QAAQ,CAAC,YAAM;MACjC,OAAOK,KAAK,CAACE,OAAO,CAACC,eAAc;IACpC,CAAC;IAGD,IAAMC,QAAO,GAAIT,QAAQ,CAAC,YAAM;MAC7B,OAAOK,KAAK,CAACE,OAAO,CAAC,qBAAqB,CAAC,CAACG,IAAI,CAAC,aAAE;QAAA,OAAKC,GAAG,CAACC,EAAC,KAAMR,KAAK,CAACS,MAAM,CAACC,GAAG;MAAA;IAEtF,CAAC;IACDC,OAAO,CAACC,GAAG,CAACC,EAAE,CAAC;IAEf,IAAMC,cAAa,GAAIlB,QAAQ,CAAC,YAAM;MACjC,OAAOK,KAAK,CAACE,OAAO,CAAC,0BAA0B;IACpD,CAAC;IAED,IAAMY,KAAI,GAAI,SAARA,KAAI,GAAe;;MAIpB;MACA;MACA;MACA;MACA;;MAEA;IAEL;IAEA,OAAM;MAACV,QAAQ,EAARA,QAAQ;MAAEH,UAAU,EAAVA,UAAU;MAAEa,KAAK,EAALA,KAAK;MAAED,cAAc,EAAdA;IAAc;EAErD;AACJ","names":["useRoute","useStore","computed","BaseButton","components","setup","route","store","isLoggedIn","getters","isAuthenticated","building","find","bld","id","params","bid","console","log","ha","hasApplication","apply"],"sourceRoot":"","sources":["/Users/tamashollos/Git/living-togeter/src/pages/buildings/BuildingDetail.vue"],"sourcesContent":["<template>\n    <base-card>\n        <h2>{{building.name}}</h2>\n        <p>{{building.description}}</p>\n\n        <base-button v-if=\"isLoggedIn && !hasApplication\" link :to=\"'/residents/' + building.id\" type=\"filled\" @click=\"apply\">Join this community</base-button>\n        <div v-else-if=\"!isLoggedIn\">\n            <p>You need to log in to apply for this community</p>\n            <router-link link to=\"/auth\" type=\"filled\">Login</router-link>\n        </div>\n\n    </base-card>\n</template>\n\n<script>\n\nimport { useRoute } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { computed } from '@vue/runtime-core'\nimport BaseButton from '@/components/UI/BaseButton.vue'\nexport default {\n  components: { BaseButton },\n\n    setup() {\n       const route = useRoute()\n       const store = useStore()\n\n       const isLoggedIn = computed(() => {\n        return store.getters.isAuthenticated\n       })\n\n       \n       const building = computed(() => {\n          return store.getters['buildings/buildings'].find(bld => bld.id === route.params.bid)\n            \n       })\n       console.log(ha);\n\n       const hasApplication = computed(() => {\n            return store.getters['residents/hasApplication']\n       })\n\n       const apply = function() {\n            \n\n            \n            // const request = {\n            //     email: localStorage.getItem('email'),\n            //     userId: localStorage.getItem('userId'),\n            //     buildingId: route.params.bid\n            // }\n\n            // store.dispatch('residents/apply', request)\n\n       }\n\n       return{building, isLoggedIn, apply, hasApplication}\n       \n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}