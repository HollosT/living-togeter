{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { isRef, ref } from '@vue/reactivity';\nimport { useStore } from 'vuex';\nexport default {\n  setup: function setup() {\n    var store = useStore();\n    var buildings = store.getters[\"buildings/buildings\"];\n    var name = ref({\n      val: '',\n      isValid: true\n    });\n    var formIsValid = ref(true);\n    var address = ref({\n      country: {\n        val: '',\n        isUnique: true,\n        isValid: true\n      },\n      city: {\n        val: '',\n        isUnique: true,\n        isValid: true\n      },\n      postalCode: {\n        val: '',\n        isUnique: true,\n        isValid: true\n      },\n      street: {\n        val: '',\n        isUnique: true,\n        isValid: true\n      },\n      buildingNumber: {\n        val: '',\n        isUnique: true,\n        isValid: true\n      }\n    });\n\n    // const country = ref({\n    //     val: '',\n    //     isValid: true\n    // }),\n    // const city = ref({\n    //     val: '',\n    //     isValid: true\n    // }),\n    // const postalCode = ref({\n    //     val: '',\n    //     isValid: true\n    // }),\n    // const street = ref({\n    //     val: '',\n    //     isValid: true\n    // }),\n    // const buildingNumber = ref({\n    //     val: '',\n    //     isValid: true\n    // }),\n    // const flats = ref({\n    //     val: '',\n    //     isValid: true\n    // }),\n    // const description = ref({\n    //     val: '',\n    //     isValid: true\n    // })\n    console.log(name.value.val);\n    function addressValidation(input) {\n      buildings.forEach(function (bld) {\n        var address = bld.address;\n        for (var key in address) {\n          if (key === input) {}\n        }\n        //         console.log(bld[input]);\n        // //         if(bld[input].includes(address.value[input].val) && bld[input].length === address.value[input].val.length) {\n        // //           console.log(address.value[input].val);\n\n        // //           // console.log(address.value[input].isUnique.value);\n        // //           // return address.value[input].isUnique.value = false\n        // //         }\n      });\n    }\n\n    function submitForm() {\n      console.log(address.value);\n    }\n    return {\n      name: name,\n      address: address,\n      addressValidation: addressValidation,\n      submitForm: submitForm\n    };\n  }\n};","map":{"version":3,"mappings":";;;AAgDA,SAASA,KAAK,EAAEC,GAAE,QAAS,iBAAgB;AAC3C,SAASC,QAAO,QAAS,MAAK;AAI9B,eAAe;EAGXC,KAAK,mBAAG;IACJ,IAAMC,KAAI,GAAIF,QAAQ,EAAC;IACvB,IAAMG,SAAQ,GAAKD,KAAK,CAACE,OAAO,CAAC,qBAAqB;IACtD,IAAMC,IAAG,GAAIN,GAAG,CAAC;MACRO,GAAG,EAAE,EAAE;MACRC,OAAO,EAAE;IACjB,CAAC;IAED,IAAMC,WAAU,GAAIT,GAAG,CAAC,IAAI;IAC5B,IAAMU,OAAM,GAAIV,GAAG,CAAC;MAChBW,OAAO,EAAE;QACLJ,GAAG,EAAE,EAAE;QACPK,QAAQ,EAAE,IAAI;QACdJ,OAAO,EAAE;MACb,CAAC;MACDK,IAAI,EAAE;QACFN,GAAG,EAAE,EAAE;QACPK,QAAQ,EAAE,IAAI;QACdJ,OAAO,EAAE;MACb,CAAC;MACDM,UAAU,EAAE;QACRP,GAAG,EAAE,EAAE;QACPK,QAAQ,EAAE,IAAI;QACdJ,OAAO,EAAE;MACb,CAAC;MACDO,MAAM,EAAE;QACJR,GAAG,EAAE,EAAE;QACPK,QAAQ,EAAE,IAAI;QACdJ,OAAO,EAAE;MACb,CAAC;MACDQ,cAAc,EAAE;QACZT,GAAG,EAAE,EAAE;QACPK,QAAQ,EAAE,IAAI;QACdJ,OAAO,EAAE;MACb;IACJ,CAAC;;IAGG;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACJS,OAAO,CAACC,GAAG,CAACZ,IAAI,CAACa,KAAK,CAACZ,GAAG,CAAC;IAE3B,SAASa,iBAAiB,CAACC,KAAK,EAAE;MAChCjB,SAAS,CAACkB,OAAO,CAAC,aAAE,EAAK;QACrB,IAAMZ,OAAM,GAAIa,GAAG,CAACb,OAAM;QACtB,KAAK,IAAMc,GAAE,IAAKd,OAAO,EAAE;UAEvB,IAAGc,GAAE,KAAMH,KAAK,EAAE,CAElB;QAEJ;QACJ;QACA;QACA;;QAEA;QACA;QACA;MACM,CAAC;IAEb;;IAMJ,SAASI,UAAU,GAAG;MAClBR,OAAO,CAACC,GAAG,CAACR,OAAO,CAACS,KAAK,CAAC;IAC9B;IAIA,OAAO;MAACb,IAAI,EAAJA,IAAI;MAAEI,OAAO,EAAPA,OAAO;MAAEU,iBAAiB,EAAjBA,iBAAiB;MAAEK,UAAU,EAAVA;IAAU;EACxD;AACA","names":["isRef","ref","useStore","setup","store","buildings","getters","name","val","isValid","formIsValid","address","country","isUnique","city","postalCode","street","buildingNumber","console","log","value","addressValidation","input","forEach","bld","key","submitForm"],"sourceRoot":"","sources":["/Users/tamashollos/Git/living-togeter/src/components/buildings/BuildingForm.vue"],"sourcesContent":["<template>\n      <base-form @submit.prevent=\"submitForm\">\n\n        <div class=\"input-container\">\n          <label for=\"name\">Add a name for your neighborhood:</label>\n          <input type=\"text\" id=\"name\" v-model.trim=\"name.val\" requeired autofocus >\n        </div>\n\n       <div class=\"input-container\">\n          <label for=\"country\">Country:</label>\n          <input type=\"text\" id=\"country\" v-model.trim=\"address.country.val\" requeired @blur=\"addressValidation('country')\">\n        </div> \n\n        <div class=\"input-container\">\n          <label for=\"city\">City:</label>\n          <input type=\"text\" id=\"city\" v-model.trim=\"address.city.val\" requeired @blur=\"addressValidation('city')\">\n        </div>\n\n        <div class=\"input-container\">\n          <label for=\"postalCode\">Postal code:</label>\n          <input type=\"number\" id=\"postalCode\" v-model.trim=\"address.postalCode.val\" requeired @blur=\"addressValidation('postalCode')\">\n        </div>\n\n        <div class=\"input-container\">\n          <label for=\"street\">Street:</label>\n          <input type=\"text\" id=\"street\" v-model.trim=\"address.street.val\" requeired @blur=\"addressValidation('street')\">\n        </div>\n\n        <div class=\"input-container\">\n          <label for=\"buildingNumber\">Building number:</label>\n          <input type=\"number\" id=\"buildingNumber\" v-model.trim=\"address.buildingNumber.val\" requeired @blur=\"addressValidation('buildingNumber')\">\n        </div>\n        <!-- \n    \n        <div class=\"input-container\">\n          <label for=\"flats\">Number of flats:</label>\n          <input type=\"number\" id=\"flats\" v-model.trim=\"flats.val\" requeired >\n        </div>\n        <div class=\"input-container\">\n          <label for=\"description\">Description:</label>\n          <textarea  id=\"description\"  rows=\"3\" v-model.trim=\"description.val\" requeired ></textarea>\n        </div> -->\n\n        <base-button type=\"filled\">Send</base-button>\n      </base-form>\n</template>\n\n<script>\nimport { isRef, ref } from '@vue/reactivity'\nimport { useStore } from 'vuex'\n\n\n\nexport default {\n\n\n    setup() {\n        const store = useStore()\n        const buildings =  store.getters[\"buildings/buildings\"]\n        const name = ref({\n                 val: '',\n                isValid: true\n        })\n\n        const formIsValid = ref(true)\n        const address = ref({\n            country: {\n                val: '',\n                isUnique: true,\n                isValid: true\n            },\n            city: {\n                val: '',\n                isUnique: true,\n                isValid: true\n            },\n            postalCode: {\n                val: '',\n                isUnique: true,\n                isValid: true\n            },\n            street: {\n                val: '',\n                isUnique: true,\n                isValid: true\n            },\n            buildingNumber: {\n                val: '',\n                isUnique: true,\n                isValid: true\n            }\n        })\n      \n       \n            // const country = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const city = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const postalCode = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const street = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const buildingNumber = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const flats = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const description = ref({\n            //     val: '',\n            //     isValid: true\n            // })\n        console.log(name.value.val);\n        \n        function addressValidation(input) {\n          buildings.forEach(bld => {\n              const address = bld.address\n                  for( const key in address) {\n\n                      if(key === input) {\n\n                      }\n                \n                  }\n              //         console.log(bld[input]);\n              // //         if(bld[input].includes(address.value[input].val) && bld[input].length === address.value[input].val.length) {\n              // //           console.log(address.value[input].val);\n                        \n              // //           // console.log(address.value[input].isUnique.value);\n              // //           // return address.value[input].isUnique.value = false\n              // //         }\n                    })\n                  \n        }\n\n\n\n\n\n    function submitForm() {\n        console.log(address.value);\n    }\n\n\n\n    return {name, address, addressValidation, submitForm}\n}\n}\n</script>\n\n<style scoped> \n    .input-container {\n        width: 80%;\n        margin: auto;\n        display: flex;\n        gap: 2vw;\n        margin-bottom: 3vw;\n    }\n\n    input,\n    textarea {\n        width: 25vw;\n        border-radius: .5vw;\n\n    }\n\n\n</style>"]},"metadata":{},"sourceType":"module"}