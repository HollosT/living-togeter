{"ast":null,"code":"import \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { isRef, ref } from '@vue/reactivity';\nimport { useStore } from 'vuex';\nexport default {\n  setup: function setup() {\n    var store = useStore();\n    var buildings = store.getters[\"buildings/buildings\"];\n    var name = ref({\n      val: '',\n      isValid: true\n    });\n    var formIsValid = ref(true);\n    var address = ref({\n      name: {\n        id: 1\n      },\n      country: {\n        val: '',\n        isValid: true\n      },\n      city: {\n        id: 1,\n        val: '',\n        isValid: true\n      },\n      postalCode: {\n        val: '',\n        isValid: true\n      },\n      street: {\n        val: '',\n        isValid: true\n      },\n      buildingNumber: {\n        val: '',\n        isValid: true\n      }\n    });\n\n    // const country = ref({\n    //     val: '',\n    //     isValid: true\n    // }),\n    // const city = ref({\n    //     val: '',\n    //     isValid: true\n    // }),\n    // const postalCode = ref({\n    //     val: '',\n    //     isValid: true\n    // }),\n    // const street = ref({\n    //     val: '',\n    //     isValid: true\n    // }),\n    // const buildingNumber = ref({\n    //     val: '',\n    //     isValid: true\n    // }),\n    // const flats = ref({\n    //     val: '',\n    //     isValid: true\n    // }),\n    // const description = ref({\n    //     val: '',\n    //     isValid: true\n    // })\n\n    function inputUniqueValidation(input) {\n      for (var key in formData.value) {\n        if (key === input) {\n          var error = buildings.some(function (bld) {\n            if (bld[input].includes(formData.value[input].val) && bld[input].length === formData.value[input].val.length) return true;\n          });\n          console.log(error);\n        }\n      }\n    }\n\n    // function submitForm() {\n\n    // }\n\n    return {\n      address: address,\n      inputUniqueValidation: inputUniqueValidation\n    };\n  }\n};","map":{"version":3,"mappings":";;;;AAuDA,SAASA,KAAK,EAAEC,GAAE,QAAS,iBAAgB;AAC3C,SAASC,QAAO,QAAS,MAAK;AAI9B,eAAe;EAGXC,KAAK,mBAAG;IACJ,IAAMC,KAAI,GAAIF,QAAQ,EAAC;IACvB,IAAMG,SAAQ,GAAKD,KAAK,CAACE,OAAO,CAAC,qBAAqB;IACtD,IAAMC,IAAG,GAAIN,GAAG,CAAC;MACRO,GAAG,EAAE,EAAE;MACRC,OAAO,EAAE;IACjB,CAAC;IAED,IAAMC,WAAU,GAAIT,GAAG,CAAC,IAAI;IAC5B,IAAMU,OAAM,GAAIV,GAAG,CAAC;MAChBM,IAAI,EAAE;QACFK,EAAE,EAAE;MAER,CAAC;MACDC,OAAO,EAAE;QACLL,GAAG,EAAE,EAAE;QACPC,OAAO,EAAE;MACb,CAAC;MACDK,IAAI,EAAE;QACFF,EAAE,EAAE,CAAC;QACLJ,GAAG,EAAE,EAAE;QACPC,OAAO,EAAE;MACb,CAAC;MACDM,UAAU,EAAE;QACRP,GAAG,EAAE,EAAE;QACPC,OAAO,EAAE;MACb,CAAC;MACDO,MAAM,EAAE;QACJR,GAAG,EAAE,EAAE;QACPC,OAAO,EAAE;MACb,CAAC;MACDQ,cAAc,EAAE;QACZT,GAAG,EAAE,EAAE;QACPC,OAAO,EAAE;MACb;IACJ,CAAC;;IAGG;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAIJ,SAASS,qBAAqB,CAACC,KAAK,EAAE;MAClC,KAAK,IAAMC,GAAE,IAAKC,QAAQ,CAACC,KAAK,EAAE;QAC/B,IAAGF,GAAE,KAAMD,KAAK,EAAE;UACd,IAAMI,KAAI,GAAIlB,SAAS,CAACmB,IAAI,CAAC,aAAE,EAAK;YACjC,IAAGC,GAAG,CAACN,KAAK,CAAC,CAACO,QAAQ,CAACL,QAAQ,CAACC,KAAK,CAACH,KAAK,CAAC,CAACX,GAAG,KAAKiB,GAAG,CAACN,KAAK,CAAC,CAACQ,MAAK,KAAMN,QAAQ,CAACC,KAAK,CAACH,KAAK,CAAC,CAACX,GAAG,CAACmB,MAAM,EAAE,OAAO,IAAG;UAEzH,CAAC;UACDC,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;QAEvB;MACH;IAEJ;;IAIJ;;IAEA;;IAIA,OAAO;MAACZ,OAAO,EAAPA,OAAO;MAAEO,qBAAqB,EAArBA;IAAqB;EAC1C;AACA","names":["isRef","ref","useStore","setup","store","buildings","getters","name","val","isValid","formIsValid","address","id","country","city","postalCode","street","buildingNumber","inputUniqueValidation","input","key","formData","value","error","some","bld","includes","length","console","log"],"sourceRoot":"","sources":["/Users/tamashollos/Git/living-togeter/src/components/buildings/BuildingForm.vue"],"sourcesContent":["<template>\n      <base-form >\n\n        <div class=\"input-container\">\n          <label for=\"name\">Add a name for your neighborhood:</label>\n          <input type=\"text\" id=\"name\" v-model.trim=\"address.name.val\" requeired autofocus @blur=\"inputUniqueValidation('name')\">\n        </div>\n        <input type=\"text\">\n\n       <div class=\"input-container\">\n          <label for=\"country\">Country:</label>\n          <input type=\"text\" id=\"country\" v-model.trim=\"address.country.val\" requeired @blur=\"inputUniqueValidation('country')\">\n        </div> \n\n        <div class=\"input-container\">\n          <label for=\"city\">City:</label>\n          <input type=\"text\" id=\"city\" v-model.trim=\"address.city.val\" requeired @blur=\"inputUniqueValidation('city')\">\n        </div>\n\n        <div class=\"input-container\">\n          <label for=\"postalCode\">Postal code:</label>\n          <input type=\"number\" id=\"postalCode\" v-model.trim=\"address.postalCode.val\" requeired @blur=\"inputUniqueValidation('postalCode')\">\n        </div>\n\n        <div class=\"input-container\">\n          <label for=\"street\">Street:</label>\n          <input type=\"text\" id=\"street\" v-model.trim=\"address.street.val\" requeired @blur=\"inputUniqueValidation('street')\">\n        </div>\n\n        <div class=\"input-container\">\n          <label for=\"buildingNumber\">Building number:</label>\n          <input type=\"number\" id=\"buildingNumber\" v-model.trim=\"address.buildingNumber.val\" requeired @blur=\"inputUniqueValidation('buildingNumber')\">\n        </div>\n        <!-- \n        <div class=\"input-container\">\n          <label for=\"postalCode\">Postal code:</label>\n          <input type=\"number\" id=\"postalCode\" v-model.trim=\"postalCode.val\" requeired >\n        </div>\n\n       \n\n        <div class=\"input-container\">\n          <label for=\"flats\">Number of flats:</label>\n          <input type=\"number\" id=\"flats\" v-model.trim=\"flats.val\" requeired >\n        </div>\n        <div class=\"input-container\">\n          <label for=\"description\">Description:</label>\n          <textarea  id=\"description\"  rows=\"3\" v-model.trim=\"description.val\" requeired ></textarea>\n        </div> -->\n\n        <base-button type=\"filled\">Send</base-button>\n      </base-form>\n</template>\n\n<script>\nimport { isRef, ref } from '@vue/reactivity'\nimport { useStore } from 'vuex'\n\n\n\nexport default {\n\n\n    setup() {\n        const store = useStore()\n        const buildings =  store.getters[\"buildings/buildings\"]\n        const name = ref({\n                 val: '',\n                isValid: true\n        })\n\n        const formIsValid = ref(true)\n        const address = ref({\n            name: {\n                id: 1,\n                \n            },\n            country: {\n                val: '',\n                isValid: true\n            },\n            city: {\n                id: 1,\n                val: '',\n                isValid: true\n            },\n            postalCode: {\n                val: '',\n                isValid: true\n            },\n            street: {\n                val: '',\n                isValid: true\n            },\n            buildingNumber: {\n                val: '',\n                isValid: true\n            }\n        })\n      \n       \n            // const country = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const city = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const postalCode = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const street = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const buildingNumber = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const flats = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const description = ref({\n            //     val: '',\n            //     isValid: true\n            // })\n\n      \n\n        function inputUniqueValidation(input) {\n            for( const key in formData.value) {\n               if(key === input) {\n                   const error = buildings.some(bld => {\n                      if(bld[input].includes(formData.value[input].val) && bld[input].length === formData.value[input].val.length) return true\n                        \n                    })\n                    console.log(error);\n                    \n               }\n            }\n        \n        }\n\n\n\n    // function submitForm() {\n        \n    // }\n\n\n\n    return {address, inputUniqueValidation}\n}\n}\n</script>\n\n<style scoped> \n    .input-container {\n        width: 80%;\n        margin: auto;\n        display: flex;\n        gap: 2vw;\n        margin-bottom: 3vw;\n    }\n\n    input,\n    textarea {\n        width: 25vw;\n        border-radius: .5vw;\n\n    }\n\n\n</style>"]},"metadata":{},"sourceType":"module"}