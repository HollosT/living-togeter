{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tamashollos/Git/living-togeter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/tamashollos/Git/living-togeter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { computed, ref } from '@vue/runtime-core';\nimport { useStore } from 'vuex';\nimport BuildingItem from '@/components/buildings/BuildingItem.vue';\nexport default {\n  components: {\n    BuildingItem: BuildingItem\n  },\n  setup: function setup() {\n    var store = useStore();\n    var isLoading = true;\n    var buildings = computed(function () {\n      return store.getters[\"buildings/buildings\"];\n    });\n    var hasBuildings = computed(function () {\n      return store.getters[\"buildings/hasBuildings\"];\n    });\n    function loadBuildings() {\n      return _loadBuildings.apply(this, arguments);\n    }\n    function _loadBuildings() {\n      _loadBuildings = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _loadBuildings.apply(this, arguments);\n    }\n    return {\n      buildings: buildings,\n      hasBuildings: hasBuildings,\n      isLoading: isLoading\n    };\n  }\n};","map":{"version":3,"mappings":";;AAcA,SAASA,QAAQ,EAAEC,GAAE,QAAS,mBAAkB;AAChD,SAASC,QAAO,QAAS,MAAK;AAC9B,OAAOC,YAAW,MAAO,yCAAwC;AAGjE,eAAe;EACbC,UAAU,EAAE;IAAED,YAAW,EAAXA;EAAa,CAAC;EAG5BE,KAAK,mBAAG;IACN,IAAMC,KAAI,GAAIJ,QAAQ,EAAC;IACvB,IAAMK,SAAQ,GAAI,IAAI;IAEtB,IAAMC,SAAQ,GAAIR,QAAQ,CAAC,YAAM;MAC/B,OAAOM,KAAK,CAACG,OAAO,CAAC,qBAAqB;IAC5C,CAAC;IACD,IAAMC,YAAW,GAAIV,QAAQ,CAAC,YAAM;MAClC,OAAOM,KAAK,CAACG,OAAO,CAAC,wBAAwB;IAC/C,CAAC;IAAA,SAEcE,aAAa;MAAA;IAAA;IAAA;MAAA,4EAA5B;QAAA;UAAA;YAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAEA;MAAA;IAAA;IAGA,OAAM;MAACH,SAAS,EAATA,SAAS;MAAEE,YAAY,EAAZA,YAAY;MAAEH,SAAS,EAATA;IAAS;EAE3C;AAGF","names":["computed","ref","useStore","BuildingItem","components","setup","store","isLoading","buildings","getters","hasBuildings","loadBuildings"],"sourceRoot":"","sources":["/Users/tamashollos/Git/living-togeter/src/pages/buildings/BuildingList.vue"],"sourcesContent":["<template>\n  <base-card>\n  <h2>Building list</h2>\n  <base-button link to=\"/buildings/registration\" type=\"filled\">Register a new community</base-button>\n   \n  <h2 v-if=\"!hasBuildings\">There is no registered buildings yet!</h2>\n  <div v>Loading...</div>\n  <building-item v-else  v-for=\"building in buildings\" :key=\"building.id\" :building=\"building\"></building-item>\n  \n\n  </base-card>\n</template>\n\n<script>\nimport { computed, ref } from '@vue/runtime-core'\nimport { useStore } from 'vuex'\nimport BuildingItem from '@/components/buildings/BuildingItem.vue'\n\n\nexport default {\n  components: { BuildingItem },\n\n \n  setup() {\n    const store = useStore()\n    const isLoading = true;\n    \n    const buildings = computed(() => {\n      return store.getters[\"buildings/buildings\"]\n    })\n    const hasBuildings = computed(() => {\n      return store.getters[\"buildings/hasBuildings\"]\n    })\n\n    async function loadBuildings() {\n\n    }\n    \n\n    return{buildings, hasBuildings, isLoading}\n\n  }\n\n\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}