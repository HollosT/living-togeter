{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tamashollos/Git/living-togeter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/tamashollos/Git/living-togeter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ref } from '@vue/reactivity';\nimport { useStore } from 'vuex';\nimport CommunityList from '@/components/community/CommunityList.vue';\nexport default {\n  components: {\n    CommunityList: CommunityList\n  },\n  setup: function setup() {\n    var store = useStore();\n    var applications = ref([]);\n    var building = ref({});\n    function init() {\n      return _init.apply(this, arguments);\n    }\n    function _init() {\n      _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var buildingId, curBuilding;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                buildingId = localStorage.getItem('buildingMember');\n                _context.prev = 1;\n                _context.next = 4;\n                return store.dispatch('buildings/loadBuilding', buildingId);\n              case 4:\n                _context.next = 6;\n                return store.getters['buildings/buildings'];\n              case 6:\n                curBuilding = _context.sent;\n                building.value = curBuilding;\n\n                // Fetch the residents of the building\n                _context.next = 10;\n                return store.dispatch('residents/fetchApplications', building);\n              case 10:\n                _context.next = 15;\n                break;\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 12]]);\n      }));\n      return _init.apply(this, arguments);\n    }\n    init();\n    return {\n      building: building\n    };\n  }\n};","map":{"version":3,"mappings":";;AAQA,SAASA,GAAE,QAAS,iBAAgB;AACpC,SAASC,QAAO,QAAS,MAAK;AAC9B,OAAOC,aAAY,MAAO,0CAAyC;AAEnE,eAAe;EACbC,UAAU,EAAE;IAAED,aAAY,EAAZA;EAAc,CAAC;EAC3BE,KAAK,mBAAG;IACJ,IAAMC,KAAI,GAAIJ,QAAQ,EAAC;IACvB,IAAMK,YAAW,GAAIN,GAAG,CAAC,EAAE;IAC3B,IAAMO,QAAO,GAAIP,GAAG,CAAC,CAAC,CAAC;IAAA,SAGRQ,IAAI;MAAA;IAAA;IAAA;MAAA,mEAAnB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACUC,UAAS,GAAIC,YAAY,CAACC,OAAO,CAAC,gBAAgB;gBAAA;gBAAA;gBAAA,OAG9CN,KAAK,CAACO,QAAQ,CAAC,wBAAwB,EAAEH,UAAU;cAAA;gBAAA;gBAAA,OAEhCJ,KAAK,CAACQ,OAAO,CAAC,qBAAqB;cAAA;gBAAvDC,WAAU;gBACfP,QAAQ,CAACQ,KAAI,GAAID,WAAU;;gBAG3B;gBAAA;gBAAA,OACMT,KAAK,CAACO,QAAQ,CAAC,6BAA6B,EAAEL,QAAQ;cAAA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAI5DS,OAAO,CAACC,GAAG,aAAK;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAGxB;MAAA;IAAA;IAEAT,IAAI,EAAC;IAGL,OAAO;MAACD,QAAQ,EAARA;IAAQ;EACpB;AAGJ","names":["ref","useStore","CommunityList","components","setup","store","applications","building","init","buildingId","localStorage","getItem","dispatch","getters","curBuilding","value","console","log"],"sourceRoot":"","sources":["/Users/tamashollos/Git/living-togeter/src/pages/community/Community.vue"],"sourcesContent":["<template>\n  <h1>{{building.name}}</h1>\n\n  <community-list></community-list>\n\n</template>\n\n<script>\nimport { ref } from '@vue/reactivity'\nimport { useStore } from 'vuex'\nimport CommunityList from '@/components/community/CommunityList.vue'\n\nexport default {\n  components: { CommunityList },\n    setup() {\n        const store = useStore()\n        const applications = ref([])\n        const building = ref({})\n\n\n        async function init() {\n            const buildingId = localStorage.getItem('buildingMember')\n            try {\n                // Fetch the current building\n                await store.dispatch('buildings/loadBuilding', buildingId)\n\n               const curBuilding = await store.getters['buildings/buildings']\n                building.value = curBuilding\n\n\n                // Fetch the residents of the building\n                await store.dispatch('residents/fetchApplications', building)\n\n\n            } catch(err) {\n                console.log(err);\n            }\n\n        }\n        \n        init()\n        \n\n        return {building}\n    }\n\n\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}