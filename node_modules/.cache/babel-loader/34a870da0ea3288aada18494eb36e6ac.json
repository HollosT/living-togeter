{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tamashollos/Git/living-togeter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/tamashollos/Git/living-togeter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  generatePost: function generatePost(context, payload) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var newPost, response, error, responseData;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(payload);\n              newPost = {\n                userId: payload.userId,\n                email: payload.email,\n                post: payload.post,\n                date: payload.date\n              };\n              _context.next = 4;\n              return fetch(\"https://living-together-90530-default-rtdb.europe-west1.firebasedatabase.app/posts/\".concat(payload.userId, \".json\"), {\n                method: 'POST',\n                body: JSON.stringify(newPost)\n              });\n            case 4:\n              response = _context.sent;\n              if (response.ok) {\n                _context.next = 8;\n                break;\n              }\n              error = new Error(responseData.message || 'Failed to send request.');\n              throw error;\n            case 8:\n              _context.next = 10;\n              return response.json();\n            case 10:\n              responseData = _context.sent;\n              context.commit('addPost', newPost);\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  loadPosts: function loadPosts(context) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var response, error, posts, responseData, key, innerKey, path, postWannabe;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"https://living-together-90530-default-rtdb.europe-west1.firebasedatabase.app/posts/.json\");\n            case 2:\n              response = _context2.sent;\n              if (response.ok) {\n                _context2.next = 6;\n                break;\n              }\n              error = new Error(responseData.message || 'Failed to send request.');\n              throw error;\n            case 6:\n              posts = [];\n              _context2.next = 9;\n              return response.json();\n            case 9:\n              responseData = _context2.sent;\n              for (key in responseData) {\n                for (innerKey in responseData[key]) {\n                  path = responseData[key][innerKey];\n                  postWannabe = {\n                    userId: path.userId,\n                    email: path.email,\n                    post: path.post,\n                    date: path.date\n                  };\n                  posts.push(po);\n                }\n              }\n              // context.commit('addPost', newPost)\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"names":["generatePost","context","payload","console","log","newPost","userId","email","post","date","fetch","method","body","JSON","stringify","response","ok","error","Error","responseData","message","json","commit","loadPosts","posts","key","innerKey","path","postWannabe","push","po"],"sources":["/Users/tamashollos/Git/living-togeter/src/store/modules/posts/actions.js"],"sourcesContent":["export default {\n    async generatePost(context, payload) {\n        console.log(payload);\n        const newPost = {\n            userId: payload.userId,\n            email: payload.email,\n            post: payload.post,\n            date: payload.date\n            \n        }\n\n        const response = await fetch(`https://living-together-90530-default-rtdb.europe-west1.firebasedatabase.app/posts/${payload.userId}.json`, {\n            method: 'POST',\n            body: JSON.stringify(newPost)\n        })\n\n        if(!response.ok) {\n            const error = new Error(responseData.message || 'Failed to send request.')\n            throw error\n        }\n\n        const responseData = await response.json()\n\n        context.commit('addPost', newPost)\n    },\n\n\n    async loadPosts(context) {\n        const response = await fetch(`https://living-together-90530-default-rtdb.europe-west1.firebasedatabase.app/posts/.json`)\n\n        if(!response.ok) {\n            const error = new Error(responseData.message || 'Failed to send request.')\n            throw error\n        }\n\n        let posts = []\n\n        const responseData = await response.json()\n        for(const key in responseData) {\n            for(const innerKey in responseData[key]) {\n                const path = responseData[key][innerKey]\n                const postWannabe = {\n                    userId: path.userId,\n                    email: path.email,\n                    post: path.post,\n                    date: path.date\n                }\n\n                posts.push(po)\n            }\n        }\n        // context.commit('addPost', newPost)\n    },\n}"],"mappings":";;;;;;;AAAA,eAAe;EACLA,YAAY,wBAACC,OAAO,EAAEC,OAAO,EAAE;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cACjCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;cACdG,OAAO,GAAG;gBACZC,MAAM,EAAEJ,OAAO,CAACI,MAAM;gBACtBC,KAAK,EAAEL,OAAO,CAACK,KAAK;gBACpBC,IAAI,EAAEN,OAAO,CAACM,IAAI;gBAClBC,IAAI,EAAEP,OAAO,CAACO;cAElB,CAAC;cAAA;cAAA,OAEsBC,KAAK,8FAAuFR,OAAO,CAACI,MAAM,YAAS;gBACtIK,MAAM,EAAE,MAAM;gBACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,OAAO;cAChC,CAAC,CAAC;YAAA;cAHIU,QAAQ;cAAA,IAKVA,QAAQ,CAACC,EAAE;gBAAA;gBAAA;cAAA;cACLC,KAAK,GAAG,IAAIC,KAAK,CAACC,YAAY,CAACC,OAAO,IAAI,yBAAyB,CAAC;cAAA,MACpEH,KAAK;YAAA;cAAA;cAAA,OAGYF,QAAQ,CAACM,IAAI,EAAE;YAAA;cAApCF,YAAY;cAElBlB,OAAO,CAACqB,MAAM,CAAC,SAAS,EAAEjB,OAAO,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EACtC,CAAC;EAGKkB,SAAS,qBAACtB,OAAO,EAAE;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACES,KAAK,4FAA4F;YAAA;cAAlHK,QAAQ;cAAA,IAEVA,QAAQ,CAACC,EAAE;gBAAA;gBAAA;cAAA;cACLC,KAAK,GAAG,IAAIC,KAAK,CAACC,YAAY,CAACC,OAAO,IAAI,yBAAyB,CAAC;cAAA,MACpEH,KAAK;YAAA;cAGXO,KAAK,GAAG,EAAE;cAAA;cAAA,OAEaT,QAAQ,CAACM,IAAI,EAAE;YAAA;cAApCF,YAAY;cAClB,KAAUM,GAAG,IAAIN,YAAY,EAAE;gBAC3B,KAAUO,QAAQ,IAAIP,YAAY,CAACM,GAAG,CAAC,EAAE;kBAC/BE,IAAI,GAAGR,YAAY,CAACM,GAAG,CAAC,CAACC,QAAQ,CAAC;kBAClCE,WAAW,GAAG;oBAChBtB,MAAM,EAAEqB,IAAI,CAACrB,MAAM;oBACnBC,KAAK,EAAEoB,IAAI,CAACpB,KAAK;oBACjBC,IAAI,EAAEmB,IAAI,CAACnB,IAAI;oBACfC,IAAI,EAAEkB,IAAI,CAAClB;kBACf,CAAC;kBAEDe,KAAK,CAACK,IAAI,CAACC,EAAE,CAAC;gBAClB;cACJ;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module"}