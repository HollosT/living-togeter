{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tamashollos/Git/living-togeter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/tamashollos/Git/living-togeter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport { ref } from '@vue/reactivity';\nexport default {\n  setup: function setup() {\n    var isPosting = ref(false);\n    var post = ref('');\n    function addPost() {\n      isPosting.value = true;\n    }\n    function cancelPost() {\n      isPosting.value = false;\n    }\n    function uploadPost() {\n      return _uploadPost.apply(this, arguments);\n    }\n    function _uploadPost() {\n      _uploadPost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var date, postWannabe;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  date = new Date().toLocaleString('eu-dk').split;\n                  console.log(date);\n                  postWannabe = {\n                    userId: localStorage.getItem('userId'),\n                    email: localStorage.getItem('email'),\n                    post: post.value\n                  };\n                } catch (err) {\n                  console.log(err);\n                }\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _uploadPost.apply(this, arguments);\n    }\n    return {\n      addPost: addPost,\n      isPosting: isPosting,\n      cancelPost: cancelPost,\n      post: post,\n      uploadPost: uploadPost\n    };\n  }\n};","map":{"version":3,"mappings":";;;;;AAaA,SAASA,GAAE,QAAS,iBAAgB;AAEpC,eAAe;EAGXC,KAAK,mBAAG;IACJ,IAAMC,SAAQ,GAAIF,GAAG,CAAC,KAAK;IAC3B,IAAMG,IAAG,GAAIH,GAAG,CAAC,EAAE;IAEnB,SAASI,OAAO,GAAG;MACfF,SAAS,CAACG,KAAI,GAAI,IAAG;IACzB;IACA,SAASC,UAAU,GAAG;MAClBJ,SAAS,CAACG,KAAI,GAAI,KAAI;IAC1B;IAAA,SAEeE,UAAU;MAAA;IAAA;IAAA;MAAA,yEAAzB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACI,IAAG;kBACOC,IAAG,GAAI,IAAIC,IAAI,EAAE,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,KAAI;kBACrDC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;kBAEVM,WAAU,GAAI;oBAChBC,MAAM,EAAEC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;oBACtCC,KAAK,EAAEF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;oBACpCd,IAAI,EAAEA,IAAI,CAACE;kBAEf;gBAIJ,CAAC,QAAMc,GAAG,EAAE;kBACRP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;gBACpB;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACJ;MAAA;IAAA;IAEA,OAAO;MAACf,OAAO,EAAPA,OAAO;MAAEF,SAAS,EAATA,SAAS;MAAEI,UAAU,EAAVA,UAAU;MAAEH,IAAI,EAAJA,IAAI;MAAEI,UAAU,EAAVA;IAAU;EAC5D;AACJ","names":["ref","setup","isPosting","post","addPost","value","cancelPost","uploadPost","date","Date","toLocaleString","split","console","log","postWannabe","userId","localStorage","getItem","email","err"],"sourceRoot":"","sources":["/Users/tamashollos/Git/living-togeter/src/components/community/Post.vue"],"sourcesContent":["<template>\n  <h2>Posts</h2>\n  <base-button v-if=\"!isPosting\" @click=\"addPost\" type=\"filled\">Share your thoughts...</base-button>\n  <div v-if=\"isPosting\">\n      <textarea  cols=\"50\" rows=\"5\" autofocus placeholder=\"...\" v-model.trim=\"post\"></textarea>\n        <div>\n            <base-button @click=\"cancelPost\" type=\"filled\">Cancel</base-button>\n            <base-button  @click=\"uploadPost\" type=\"filled\">Post</base-button>\n        </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from '@vue/reactivity'\n\nexport default {\n\n\n    setup() {\n        const isPosting = ref(false)\n        const post = ref('')\n\n        function addPost() {\n            isPosting.value = true\n        }\n        function cancelPost() {\n            isPosting.value = false\n        }\n\n        async function uploadPost() {\n            try{\n                const date = new Date().toLocaleString('eu-dk').split\n               console.log(date);\n\n                const postWannabe = {\n                    userId: localStorage.getItem('userId'),\n                    email: localStorage.getItem('email'),\n                    post: post.value,\n                    \n                }\n                \n\n\n            }catch(err) {\n                console.log(err);\n            }\n        }\n\n        return {addPost, isPosting, cancelPost, post, uploadPost}\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}