{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(\" This is the community page \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.applications, function (applicant) {\n    return _openBlock(), _createElementBlock(\"h2\", {\n      key: applicant.userId\n    });\n  }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;4GAGE,0CAAmEA,6BAA3CC,mBAAY,YAAzBC,SAAS;yBAApBC,oBAAmE;MAA5BC,GAAG,EAAEF,SAAS,CAACG","names":["_Fragment","$setup","applicant","_createElementBlock","key","userId"],"sourceRoot":"","sources":["/Users/tamashollos/Git/living-togeter/src/pages/community/Community.vue"],"sourcesContent":["<template>\n  This is the community page\n\n  <h2 v-for=\"applicant in applications\" :key=\"applicant.userId\"></h2>\n</template>\n\n<script>\nimport { ref } from '@vue/reactivity'\nimport { useStore } from 'vuex'\n\nexport default {\n    setup() {\n        const store = useStore()\n        const applications = ref([])\n\n       async function getMembers() {\n            const buildingId = localStorage.getItem('memberBuilding')\n            try{\n                await store.dispatch('residents/fetchApplications', buildingId)\n\n               const wannaBeApplicants =  await store.getters['residents/getApplications']\n               applications = wannaBeApplicants\n\n            } catch(err) {\n                console.log(err);\n            }\n              \n        }\n\n        getMembers()\n        \n\n        return {applications}\n    }\n\n\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}