{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, createVNode as _createVNode, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Posts\", -1 /* HOISTED */);\nvar _hoisted_2 = {\n  key: 1\n};\nvar _hoisted_3 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_base_button = _resolveComponent(\"base-button\");\n  var _component_post_list = _resolveComponent(\"post-list\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, !$setup.isPosting ? (_openBlock(), _createBlock(_component_base_button, {\n    key: 0,\n    onClick: $setup.addPost,\n    type: \"filled\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createTextVNode(\"Share your thoughts...\")];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), $setup.isPosting ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"textarea\", {\n    cols: \"50\",\n    rows: \"5\",\n    autofocus: \"\",\n    placeholder: \"...\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.post = $event;\n    })\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.post, void 0, {\n    trim: true\n  }]]), _createElementVNode(\"div\", null, [_createVNode(_component_base_button, {\n    onClick: $setup.cancelPost,\n    type: \"filled\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createTextVNode(\"Cancel\")];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_base_button, {\n    onClick: $setup.uploadPost,\n    type: \"filled\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createTextVNode(\"Post\")];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])])) : _createCommentVNode(\"v-if\", true), !$setup.posts.length > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"There are no posts yet for this community...\")) : (_openBlock(), _createBlock(_component_post_list, {\n    key: 3,\n    posts: $setup.posts\n  }, null, 8 /* PROPS */, [\"posts\"]))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";8BACEA,oBAAc,YAAV,OAAK;;;;;;;;;;6DAATC,UAAc,GACMC,gBAAS,kBAA7BC,aAAkGC;;IAAlEC,OAAK,EAAEH,cAAO;IAAEI,IAAI,EAAC;;wBAAS;MAAA,OAAsB,kBAAtB,wBAAsB;;;uEACzEJ,gBAAS,kBAApBK,oBAMM,oCALFP,oBAAyF;IAA9EQ,IAAI,EAAC,IAAI;IAACC,IAAI,EAAC,GAAG;IAACC,SAAS,EAAT,EAAS;IAACC,WAAW,EAAC,KAAK;;aAAeT,WAAI;IAAA;iDAAJA,WAAI;UAAlB;EAAmB,MAC3EF,oBAGM,cAFFY,aAAmER;IAArDC,OAAK,EAAEH,iBAAU;IAAEI,IAAI,EAAC;;wBAAS;MAAA,OAAM,kBAAN,QAAM;;;kCACrDM,aAAkER;IAAnDC,OAAK,EAAEH,iBAAU;IAAEI,IAAI,EAAC;;wBAAS;MAAA,OAAI,kBAAJ,MAAI;;;4EAGpDJ,YAAK,CAACW,MAAM,sBAAtBN,oBAA4E,iBAAhD,8CAA4C,oBACxEJ,aAA6CW;;IAA1BC,KAAK,EAAEb","names":["_createElementVNode","_hoisted_1","$setup","_createBlock","_component_base_button","onClick","type","_createElementBlock","cols","rows","autofocus","placeholder","_createVNode","length","_component_post_list","posts"],"sourceRoot":"","sources":["/Users/tamashollos/Git/living-togeter/src/components/community/Post.vue"],"sourcesContent":["<template>\n  <h2>Posts</h2>\n  <base-button v-if=\"!isPosting\" @click=\"addPost\" type=\"filled\">Share your thoughts...</base-button>\n  <div v-if=\"isPosting\">\n      <textarea  cols=\"50\" rows=\"5\" autofocus placeholder=\"...\" v-model.trim=\"post\"></textarea>\n        <div>\n            <base-button @click=\"cancelPost\" type=\"filled\">Cancel</base-button>\n            <base-button  @click=\"uploadPost\" type=\"filled\">Post</base-button>\n        </div>\n  </div>\n  <p v-if=\"!posts.length > 0\">There are no posts yet for this community...</p>\n  <post-list v-else :posts=\"posts\"></post-list>\n</template>\n\n<script>\nimport { ref } from '@vue/reactivity'\nimport { useStore } from 'vuex'\nimport PostList from './PostList.vue'\n\n\nexport default {\n  components: { PostList },\n\n\n    setup() {\n        const store = useStore()\n        const isPosting = ref(false)\n        const post = ref('')\n        const posts = ref([])\n\n        function addPost() {\n            isPosting.value = true\n        }\n        function cancelPost() {\n            isPosting.value = false\n        }\n\n        async function uploadPost(e) {\n            try{\n                const profile = store.getters['profiles/getProfile']\n                console.log(profile);\n                const curDate = new Date().toLocaleString('eu-dk').split(',')\n\n                const postWannabe = {\n                    userId: localStorage.getItem('userId'),\n                    email: localStorage.getItem('email'),\n                    post: post.value,\n                    date: curDate,\n                    firstName: profile.firstName,\n                    lastName: profile.lastName\n                }\n\n                await store.dispatch('posts/generatePost', postWannabe)\n                post.value = ''\n                e.target.value = ''\n                isPosting.value = false\n                \n\n\n            }catch(err) {\n                console.log(err);\n            }\n        }\n\n        async function init() {\n            try {\n                \n                await store.dispatch('posts/loadPosts')\n\n                const postsArr = store.getters['posts/getPosts']\n                posts.value = postsArr\n\n\n            }catch (err) {\n                console.log(err);\n            }\n        }\n\n        init()\n\n        return {addPost, isPosting, cancelPost, post, uploadPost, posts}\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}