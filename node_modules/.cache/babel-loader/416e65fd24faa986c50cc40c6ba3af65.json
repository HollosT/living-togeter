{"ast":null,"code":"import BaseButton from '@/components/UI/BaseButton.vue';\nimport { ref } from '@vue/reactivity';\nimport { computed } from '@vue/runtime-core';\nexport default {\n  components: {\n    BaseButton: BaseButton\n  },\n  setup: function setup() {\n    var email = ref('');\n    var password = ref('');\n    var mode = ref('login');\n    var submitBtnCaption = computed(function () {\n      if (mode.value === 'login') {\n        return 'Login';\n      } else {\n        return 'Signup';\n      }\n    });\n    var authContent = computed(function () {\n      if (mode.value === 'login') {\n        return 'Sign up';\n      } else {\n        return 'Log in';\n      }\n    });\n    function switchAuth() {\n      if (mode.value === 'login') {\n        mode.value = 'signup';\n      } else if (mode.value === 'signup') {\n        mode.value = 'login';\n      }\n    }\n    return {\n      email: email,\n      password: password,\n      submitBtnCaption: submitBtnCaption,\n      authContent: authContent\n    };\n  }\n};","map":{"version":3,"mappings":"AAuBA,OAAOA,UAAS,MAAO,gCAA+B;AACtD,SAASC,GAAE,QAAS,iBAAgB;AACpC,SAASC,QAAO,QAAS,mBAAmB;AAE5C,eAAe;EACbC,UAAU,EAAE;IAAEH,UAAS,EAATA;EAAW,CAAC;EAE1BI,KAAK,mBAAG;IACN,IAAMC,KAAI,GAAIJ,GAAG,CAAC,EAAE,CAAC;IACrB,IAAMK,QAAO,GAAIL,GAAG,CAAC,EAAE;IACvB,IAAMM,IAAG,GAAIN,GAAG,CAAC,OAAO;IAExB,IAAMO,gBAAe,GAAIN,QAAQ,CAAC,YAAM;MACpC,IAAGK,IAAI,CAACE,KAAI,KAAM,OAAO,EAAE;QACvB,OAAO,OAAM;MACjB,OAAO;QACH,OAAO,QAAO;MAClB;IACJ,CAAC;IACD,IAAMC,WAAU,GAAIR,QAAQ,CAAC,YAAM;MAC/B,IAAGK,IAAI,CAACE,KAAI,KAAM,OAAO,EAAE;QACvB,OAAO,SAAQ;MACnB,OAAO;QACH,OAAO,QAAO;MAClB;IACJ,CAAC;IAED,SAASE,UAAU,GAAG;MAClB,IAAIJ,IAAI,CAACE,KAAI,KAAM,OAAO,EAAE;QACxBF,IAAI,CAACE,KAAI,GAAI,QAAO;MACxB,OAAO,IAAIF,IAAI,CAACE,KAAI,KAAM,QAAQ,EAAE;QAChCF,IAAI,CAACE,KAAI,GAAI,OAAM;MACvB;IACJ;IAIA,OAAO;MAACJ,KAAK,EAALA,KAAK;MAAEC,QAAQ,EAARA,QAAQ;MAAEE,gBAAgB,EAAhBA,gBAAgB;MAAEE,WAAW,EAAXA;IAAa;EAC1D;AAGF","names":["BaseButton","ref","computed","components","setup","email","password","mode","submitBtnCaption","value","authContent","switchAuth"],"sourceRoot":"","sources":["/Users/tamashollos/Git/living-togeter/src/pages/auth/UseAuth.vue"],"sourcesContent":["<template>\n  <base-card>\n    <h2>Register as a resident</h2>\n    <base-form>\n            <div class=\"input-container\">\n                <label for=\"email\">Email address:</label>\n                <input type=\"email\" id=\"email\" v-model.trim=\"email\" requeired>\n            </div>\n\n            <div class=\"input-container\">\n                <label for=\"password\">Password:</label>\n                <input type=\"password\" id=\"password\" v-model.trim=\"password\" requeired>\n            </div>\n            <div class=\"input-container\">\n                <base-button type=\"filled\">{{submitBtnCaption}}</base-button>\n                <p>Or <span @click=\"switchAuth\">{{authContent}}</span> instead!</p>\n            </div>\n  </base-form>\n</base-card>\n\n</template>\n\n<script>\nimport BaseButton from '@/components/UI/BaseButton.vue'\nimport { ref } from '@vue/reactivity'\nimport { computed } from '@vue/runtime-core';\n\nexport default {\n  components: { BaseButton },\n\n  setup() {\n    const email = ref('');\n    const password = ref('')\n    const mode = ref('login')\n\n    const submitBtnCaption = computed(() => {\n        if(mode.value === 'login') {\n            return 'Login'\n        } else {\n            return 'Signup'\n        }\n    })\n    const authContent = computed(() => {\n        if(mode.value === 'login') {\n            return 'Sign up'\n        } else {\n            return 'Log in'\n        }\n    })\n\n    function switchAuth() {\n        if (mode.value === 'login') {\n            mode.value = 'signup'\n        } else if (mode.value === 'signup') {\n            mode.value = 'login'\n        }\n    }\n\n\n\n    return {email, password, submitBtnCaption, authContent, }\n  }\n \n\n}\n</script>\n\n<style scoped>\n\n.input-container {\n        width: 80%;\n        margin: auto;\n        display: flex;\n        gap: 2vw;\n        margin-bottom: 3vw;\n        justify-content: center;\n        \n    }\n\n    input,\n    textarea {\n        width: 25vw;\n        border-radius: .5vw;\n\n    }\n\n    span {\n        text-decoration: underline;\n        cursor: pointer;\n    }\n\n</style>"]},"metadata":{},"sourceType":"module"}