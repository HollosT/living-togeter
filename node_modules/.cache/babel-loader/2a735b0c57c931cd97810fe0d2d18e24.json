{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return true ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.memberArr, function (member) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: member.email\n    }, [_createElementVNode(\"h4\", null, _toDisplayString(member.email), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;SACkB,sBAAVA,oBAIK,sCAHDA,oBAEKC,6BAFgBC,gBAAS,YAAnBC,MAAM;yBAAjBH,oBAEK;MAF4BI,GAAG,EAAED,MAAM,CAACE;QACzCC,oBAAyB,6BAAnBH,MAAM,CAACE,KAAK","names":["_createElementBlock","_Fragment","$setup","member","key","email","_createElementVNode"],"sourceRoot":"","sources":["/Users/tamashollos/Git/living-togeter/src/components/community/CommunityList.vue"],"sourcesContent":["<template>\n        <ul v-if=\"\">\n            <li v-for=\"member in memberArr\" :key=\"member.email\">\n                <h4>{{member.email}}</h4>\n            </li>\n        </ul>\n</template>\n\n<script>\nimport { ref } from '@vue/reactivity'\nexport default {\n    props: ['members'],\n    setup(props) {\n        const memberArr = ref([])\n\n\n        return{memberArr}\n    }\n\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}