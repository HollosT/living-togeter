{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tamashollos/Git/living-togeter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/tamashollos/Git/living-togeter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nexport default {\n  login: function login(context, payload) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  signup: function signup(context, payload) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  auth: function auth(context, payload) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var mode, url, response, responseData, error;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              mode = payload.mode;\n              url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDFdJX12HXkQTuFCPN11sgU-vO-flAkYGY\";\n              if (mode === 'signup') {\n                url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDFdJX12HXkQTuFCPN11sgU-vO-flAkYGY\";\n              }\n              _context3.next = 5;\n              return fetch(url, {\n                method: 'POST',\n                body: JSON.stringify({\n                  email: payload.email,\n                  password: payload.password,\n                  returnSecureToken: true\n                })\n              });\n            case 5:\n              response = _context3.sent;\n              _context3.next = 8;\n              return response.json();\n            case 8:\n              responseData = _context3.sent;\n              if (response.ok) {\n                _context3.next = 12;\n                break;\n              }\n              error = new Error(responseData.message || 'Failed to authenticate! Check your credentials!');\n              throw error;\n            case 12:\n              context.comit('setUser', {\n                token: responseData.idToken,\n                userId: responseData.localId\n              });\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }\n};","map":{"version":3,"names":["login","context","payload","signup","auth","mode","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","response","json","responseData","ok","error","Error","message","comit","token","idToken","userId","localId"],"sources":["/Users/tamashollos/Git/living-togeter/src/store/modules/auth/actions.js"],"sourcesContent":["\nexport default {\n\n    async login(context, payload) {\n        \n    },\n    async signup(context, payload) {\n\n    },\n\n    async auth(context, payload) {\n        const mode = payload.mode;\n        let url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDFdJX12HXkQTuFCPN11sgU-vO-flAkYGY`\n\n        if(mode === 'signup') {\n            url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDFdJX12HXkQTuFCPN11sgU-vO-flAkYGY`\n        }\n\n        const response = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({\n                email: payload.email,\n                password: payload.password,\n                returnSecureToken: true\n            })\n        })\n\n        const responseData = await response.json()\n\n        if(!response.ok) {\n            const error = new Error(responseData.message || 'Failed to authenticate! Check your credentials!')\n            throw error\n        }\n\n        context.comit('setUser', {\n            token: responseData.idToken,\n            userId: responseData.localId,\n        })\n    }\n\n}"],"mappings":";;;;;;AACA,eAAe;EAELA,KAAK,iBAACC,OAAO,EAAEC,OAAO,EAAE;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAE9B,CAAC;EACKC,MAAM,kBAACF,OAAO,EAAEC,OAAO,EAAE;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAE/B,CAAC;EAEKE,IAAI,gBAACH,OAAO,EAAEC,OAAO,EAAE;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cACnBG,IAAI,GAAGH,OAAO,CAACG,IAAI;cACrBC,GAAG;cAEP,IAAGD,IAAI,KAAK,QAAQ,EAAE;gBAClBC,GAAG,0GAA0G;cACjH;cAAC;cAAA,OAEsBC,KAAK,CAACD,GAAG,EAAE;gBAC9BE,MAAM,EAAE,MAAM;gBACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;kBACjBC,KAAK,EAAEV,OAAO,CAACU,KAAK;kBACpBC,QAAQ,EAAEX,OAAO,CAACW,QAAQ;kBAC1BC,iBAAiB,EAAE;gBACvB,CAAC;cACL,CAAC,CAAC;YAAA;cAPIC,QAAQ;cAAA;cAAA,OASaA,QAAQ,CAACC,IAAI,EAAE;YAAA;cAApCC,YAAY;cAAA,IAEdF,QAAQ,CAACG,EAAE;gBAAA;gBAAA;cAAA;cACLC,KAAK,GAAG,IAAIC,KAAK,CAACH,YAAY,CAACI,OAAO,IAAI,iDAAiD,CAAC;cAAA,MAC5FF,KAAK;YAAA;cAGflB,OAAO,CAACqB,KAAK,CAAC,SAAS,EAAE;gBACrBC,KAAK,EAAEN,YAAY,CAACO,OAAO;gBAC3BC,MAAM,EAAER,YAAY,CAACS;cACzB,CAAC,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EACN;AAEJ,CAAC"},"metadata":{},"sourceType":"module"}