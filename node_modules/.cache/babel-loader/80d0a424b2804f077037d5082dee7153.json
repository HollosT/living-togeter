{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-7dde4f98\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"input-container\"\n};\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"label\", {\n    \"for\": \"name\"\n  }, \"Add a name for your neighborhood:\", -1 /* HOISTED */);\n});\nvar _hoisted_3 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"input\", {\n    type: \"text\"\n  }, null, -1 /* HOISTED */);\n});\nvar _hoisted_4 = {\n  \"class\": \"input-container\"\n};\nvar _hoisted_5 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"label\", {\n    \"for\": \"country\"\n  }, \"Country:\", -1 /* HOISTED */);\n});\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_base_button = _resolveComponent(\"base-button\");\n  var _component_base_form = _resolveComponent(\"base-form\");\n  return _openBlock(), _createBlock(_component_base_form, null, {\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $setup.formData.name.val = $event;\n        }),\n        requeired: \"\",\n        autofocus: \"\",\n        onBlur: _cache[1] || (_cache[1] = function ($event) {\n          return $setup.inputUniqueValidation('name');\n        })\n      }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $setup.formData.name.val, void 0, {\n        trim: true\n      }]])]), _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        id: \"country\",\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n          return $setup.formData.country.val = $event;\n        }),\n        requeired: \"\"\n      }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.formData.country.val, void 0, {\n        trim: true\n      }]])]), _createCommentVNode(\" <div class=\\\"input-container\\\">\\n          <label for=\\\"city\\\">City:</label>\\n          <input type=\\\"text\\\" id=\\\"city\\\" v-model.trim=\\\"city.val\\\" requeired >\\n        </div>\\n        <div class=\\\"input-container\\\">\\n          <label for=\\\"postalCode\\\">Postal code:</label>\\n          <input type=\\\"number\\\" id=\\\"postalCode\\\" v-model.trim=\\\"postalCode.val\\\" requeired >\\n        </div>\\n\\n        <div class=\\\"input-container\\\">\\n          <label for=\\\"street\\\">Street:</label>\\n          <input type=\\\"text\\\" id=\\\"street\\\" v-model.trim=\\\"street.val\\\" requeired >\\n        </div>\\n\\n        <div class=\\\"input-container\\\">\\n          <label for=\\\"buildingNumber\\\">Building number:</label>\\n          <input type=\\\"number\\\" id=\\\"buildingNumber\\\" v-model.trim=\\\"buildingNumber.val\\\" requeired >\\n        </div>\\n\\n        <div class=\\\"input-container\\\">\\n          <label for=\\\"flats\\\">Number of flats:</label>\\n          <input type=\\\"number\\\" id=\\\"flats\\\" v-model.trim=\\\"flats.val\\\" requeired >\\n        </div>\\n        <div class=\\\"input-container\\\">\\n          <label for=\\\"description\\\">Description:</label>\\n          <textarea  id=\\\"description\\\"  rows=\\\"3\\\" v-model.trim=\\\"description.val\\\" requeired ></textarea>\\n        </div> \"), _createVNode(_component_base_button, {\n        type: \"filled\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createTextVNode(\"Send\")];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;;;;;EAGa,SAAM;AAAiB;;sBAC1BA,oBAA2D;IAApD,OAAI;EAAM,GAAC,mCAAiC;AAAA;;sBAGrDA,oBAAmB;IAAZC,IAAI,EAAC;EAAM;AAAA;;EAEd,SAAM;AAAiB;;sBACzBD,oBAAqC;IAA9B,OAAI;EAAS,GAAC,UAAQ;AAAA;;;;;uBATjCE,aA0CYC;wBAxCV;MAAA,OAGM,CAHNH,oBAGM,OAHNI,UAGM,GAFJC,UAA2D,kBAC3DL,oBAAwH;QAAjHC,IAAI,EAAC,MAAM;QAACK,EAAE,EAAC,MAAM;;iBAAeC,eAAQ,CAACC,IAAI,CAACC,GAAG;QAAA;QAAEC,SAAS,EAAT,EAAS;QAACC,SAAS,EAAT,EAAS;QAAEC,MAAI;UAAA,OAAEL,4BAAqB;QAAA;qEAAnEA,eAAQ,CAACC,IAAI,CAACC,GAAG;cAA/B;MAAgC,QAE/DI,UAAmB,EAEpBb,oBAGO,OAHPc,UAGO,GAFJC,UAAqC,kBACrCf,oBAA+E;QAAxEC,IAAI,EAAC,MAAM;QAACK,EAAE,EAAC,SAAS;;iBAAeC,eAAQ,CAACS,OAAO,CAACP,GAAG;QAAA;QAAEC,SAAS,EAAT;qDAAtBH,eAAQ,CAACS,OAAO,CAACP,GAAG;cAAlC;MAAmC,QAGrEQ,4uCA0BU,EAEVC,aAA6CC;QAAhClB,IAAI,EAAC;MAAQ;4BAAC;UAAA,OAAI,kBAAJ,MAAI","names":["_createElementVNode","type","_createBlock","_component_base_form","_hoisted_1","_hoisted_2","id","$setup","name","val","requeired","autofocus","onBlur","_hoisted_3","_hoisted_4","_hoisted_5","country","_createCommentVNode","_createVNode","_component_base_button"],"sourceRoot":"","sources":["/Users/tamashollos/Git/living-togeter/src/components/buildings/BuildingForm.vue"],"sourcesContent":["<template>\n      <base-form >\n\n        <div class=\"input-container\">\n          <label for=\"name\">Add a name for your neighborhood:</label>\n          <input type=\"text\" id=\"name\" v-model.trim=\"formData.name.val\" requeired autofocus @blur=\"inputUniqueValidation('name')\">\n        </div>\n        <input type=\"text\">\n\n       <div class=\"input-container\">\n          <label for=\"country\">Country:</label>\n          <input type=\"text\" id=\"country\" v-model.trim=\"formData.country.val\" requeired >\n        </div> \n\n        <!-- <div class=\"input-container\">\n          <label for=\"city\">City:</label>\n          <input type=\"text\" id=\"city\" v-model.trim=\"city.val\" requeired >\n        </div>\n        <div class=\"input-container\">\n          <label for=\"postalCode\">Postal code:</label>\n          <input type=\"number\" id=\"postalCode\" v-model.trim=\"postalCode.val\" requeired >\n        </div>\n\n        <div class=\"input-container\">\n          <label for=\"street\">Street:</label>\n          <input type=\"text\" id=\"street\" v-model.trim=\"street.val\" requeired >\n        </div>\n\n        <div class=\"input-container\">\n          <label for=\"buildingNumber\">Building number:</label>\n          <input type=\"number\" id=\"buildingNumber\" v-model.trim=\"buildingNumber.val\" requeired >\n        </div>\n\n        <div class=\"input-container\">\n          <label for=\"flats\">Number of flats:</label>\n          <input type=\"number\" id=\"flats\" v-model.trim=\"flats.val\" requeired >\n        </div>\n        <div class=\"input-container\">\n          <label for=\"description\">Description:</label>\n          <textarea  id=\"description\"  rows=\"3\" v-model.trim=\"description.val\" requeired ></textarea>\n        </div> -->\n\n        <base-button type=\"filled\">Send</base-button>\n      </base-form>\n</template>\n\n<script>\nimport { isRef, ref } from '@vue/reactivity'\nimport { useStore } from 'vuex'\n\n\n\nexport default {\n\n\n    setup() {\n        const store = useStore()\n        const buildings =  store.getters[\"buildings/buildings\"]\n        console.log(buildings);\n\n        const formIsValid = ref(true)\n        const add = ref({\n            name: {\n                id: 1,\n                val: '',\n                isValid: true\n            },\n            country: {\n                val: '',\n                isValid: true\n            }\n        })\n      \n       \n            // const country = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const city = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const postalCode = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const street = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const buildingNumber = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const flats = ref({\n            //     val: '',\n            //     isValid: true\n            // }),\n            // const description = ref({\n            //     val: '',\n            //     isValid: true\n            // })\n\n      \n\n        function inputUniqueValidation(input) {\n            for( const key in formData.value) {\n               if(key === input) {\n                   const error = buildings.some(bld => {\n                      if(bld[input].includes(formData.value[input].val) && bld[input].length === formData.value[input].val.length) return true\n                        \n                    })\n                    console.log(error);\n                    \n               }\n            }\n        \n        }\n\n\n\n    // function submitForm() {\n        \n    // }\n\n\n\n    return {formData, inputUniqueValidation}\n}\n}\n</script>\n\n<style scoped> \n    .input-container {\n        width: 80%;\n        margin: auto;\n        display: flex;\n        gap: 2vw;\n        margin-bottom: 3vw;\n    }\n\n    input,\n    textarea {\n        width: 25vw;\n        border-radius: .5vw;\n\n    }\n\n\n</style>"]},"metadata":{},"sourceType":"module"}